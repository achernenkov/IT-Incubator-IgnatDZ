{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","img","alt","src","messageData","avatar","content","name","text","time","clear","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","button","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClassTrue","errorFalse","displayNone","value","onChange","errorText","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","setTimeout","alert","HW3","setUsers","usersArray","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","button_red","button_default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0ca1e3b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__jNUNs\",\"img\":\"Message_img__2d6BK\",\"content\":\"Message_content__3QixY\",\"name\":\"Message_name__2gRsh\",\"text\":\"Message_text__2WunF\",\"time\":\"Message_time__2G6MC\",\"clear\":\"Message_clear__3hFgt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1ldjs\",\"errorFalse\":\"Greeting_errorFalse__fXBQa\",\"errorText\":\"Greeting_errorText__CFSP3\",\"totalUsers\":\"Greeting_totalUsers__BwlX7\",\"displayNone\":\"Greeting_displayNone__ktmk-\",\"button\":\"Greeting_button__219Gm\",\"content\":\"Greeting_content__HUrKt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__1U814\",\"content\":\"Affairs_content__1qlic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3zxCK\",\"errorInput\":\"SuperInputText_errorInput__1j5cd\",\"error\":\"SuperInputText_error__1v4VF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_default\":\"SuperButton_button_default__3ZJ-i\",\"button_red\":\"SuperButton_button_red__Scozn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2nOwL\",\"spanClassName\":\"SuperCheckbox_spanClassName__1sSoa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1wqYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1FFud\",\"column\":\"HW4_column__3vwu_\"};","import React from \"react\";\nimport s from \"./Message.module.css\";\n\n\ntype MessageDataType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\ntype MessagePropsType = {\n    messageData: MessageDataType\n}\n\nconst Message = (props: MessagePropsType) => {\n    return (\n        <div className={s.message}>\n            <img className={s.img} alt='Текст' src={props.messageData.avatar}/>\n            <div className={s.content}>\n                <div className={s.name}>{props.messageData.name}</div>\n                <div className={s.text}>{props.messageData.message}</div>\n                <div className={s.time}>{props.messageData.time}</div>\n            </div>\n\n            <div className={s.clear}></div>\n\n        </div>\n    )\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"some text\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            <Message messageData={messageData}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void// need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };// need to fix\n\n    return (\n        <div>\n            {props.affair.name}\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    }; // need to fix\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    };\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    };\n    const setLow = () => {\n        props.setFilter(\"low\")\n    };\n\n    return (\n        <div className={s.content}>\n\n            {mappedAffairs}\n\n            <button className={s.button} onClick={setAll}>All</button>\n            <button className={s.button} onClick={setHigh}>High</button>\n            <button className={s.button} onClick={setMiddle}>Middle</button>\n            <button className={s.button} onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\" // yo\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n} // yo\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // yo\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === \"all\") return affairs;\n    if (filter === \"low\") return affairs.filter(t => t.priority === \"low\")\n    if (filter === \"high\") return affairs.filter(t => t.priority === \"high\")\n    if (filter === \"middle\") return affairs.filter(t => t.priority === \"middle\")\n    return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(t => t._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // yo\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: boolean\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClassTrue = s.errorFalse;\n    const displayNone = s.displayNone;\n\n\n    return (\n        <div className={s.content}>\n            <input value={name} onChange={setNameCallback} className={error ? inputClassTrue : \"\"}/>\n            <span className={error ? s.errorText : displayNone}>{error ? 'Введите имя' : ''}</span>\n            <button onClick={addUser} className={s.button}>add</button>\n            <br/>\n            <span className={s.totalUsers}>Добавлено пользователей: {totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\");\n    const [error, setError] = useState<boolean>(false);\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value); // need to fix\n\n    };\n    const addUser = () => {\n        if (name === '') {\n            setError(true)\n        } else {\n            setError(false)\n            setTimeout(() => alert(`Hello ${name} !`), 100); // need to fix\n            addUserCallback(name)\n        }\n    };\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n    const addUserCallback = (name: string) => {\n        let usersArray = {_id: v1(), name: name}\n        setUsers([...users, usersArray]);\n    }\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error ? <span className={finalSpanClassName}>{error}</span> :\r\n                <span className={finalSpanClassName}> </span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.button_red : s.button_default}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange\n        && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    let red: boolean\r\n    text ? red = false : red = true\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n                <br/>\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red={red} // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                <br/>\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}>\r\n                    some text 2\r\n                </SuperCheckbox>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            {/*<Switch>*/}\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            {/*<Route path={\"/\"} exact render={() => <Redirect to={PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            {/*</Switch>*/}\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Routes/>\n\n            {/*</HashRouter>*/}\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}